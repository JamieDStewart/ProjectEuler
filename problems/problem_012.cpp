/**
* Problem 12
* The sequence of triangle numbers is generated by adding the natural numbers. 
* So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28
* The first ten terms would be:
*  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
*
* Let us list the factors of the first seven triangle numbers:
*   1:1
*   3: 1, 3
*   6: 1, 2, 3, 6
*  10: 1, 2, 5, 10
*  15: 1, 3, 5, 15
*  21: 1, 3, 7, 21
*  28: 1, 2, 4, 7, 14, 28 
*  
* We can see that 28 is the first triangle number to have over five divisors.
* What is the value of the first triangle number to have over five hundred divisors?
*/

#include "problems.h"
#include "utilities.h"

void PE::problem_012()
{
    int64_t current_number = 0;
    int64_t triangle_number = 0;
    int32_t num_factors = 0;
    while (num_factors < 500)
    {
        //Increment the current number and add it to the total running sum
        current_number++;
        triangle_number += current_number;
        std::vector<uint32_t> factors = get_factors( static_cast<uint32_t>(triangle_number) );
        //set factor count to zero
        num_factors = static_cast<int32_t>(factors.size());
        
    }
	std::cout << "The value of the first triangle number to have over 500 factors is: " << triangle_number << std::endl;
	
}